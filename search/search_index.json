{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>Vueky is a standalone wrapper and extension of <code>petite-vue</code> and also inspired by <code>alpinejs</code>, designed to offer a more robust and feature-rich experience while maintaining the lightweight and reactive nature of the original library. Vueky enhances the core capabilities of petite-vue by introducing additional functionalities.</p>"},{"location":"#usage","title":"Usage","text":"<pre><code>&lt;script src=\"https://unpkg.com/vueky@latest\"&gt;&lt;/script&gt;\n</code></pre>"},{"location":"#example","title":"Example","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"UTF-8\" /&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" /&gt;\n    &lt;title&gt;Vueky&lt;/title&gt;\n    &lt;script\n      src=\"https://unpkg.com/vueky@latest\"\n      type=\"text/javascript\"\n    &gt;&lt;/script&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n    &lt;div v-scope&gt;\n      &lt;p&gt;${ $lorem.s(50) }&lt;/p&gt;\n    &lt;/div&gt;\n\n    &lt;script&gt;\n      vueky.init();\n      vueky.app().mount();\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"#templates","title":"Templates","text":"<p>By default, Vueky templates use Custom Delimiters.</p> Petite-Vue Vueky <code>{{ myValue }}</code> <code>${ myValue }</code> <p>Instead of using mustaches e.g. <code>{{ myValue }}</code>, Vueky uses <code>${ myValue }</code>.</p> <p>This design choice ensures seamless integration with Django, Jinja2, or any other tool/framework that also utilizes mustache-style syntax.</p> <pre><code>&lt;div v-scope&gt;${ myValue }&lt;/div&gt;\n</code></pre>"},{"location":"#features-vueky","title":"Features (<code>Vueky</code>)","text":"Name Description <code>vueky.init()</code> Initializes Vueky with the provided configuration. <code>vueky.use()</code> Plugin registration tool. <code>vueky.store()</code> Registers a reactive global object for state management. <code>vueky.magic()</code> Registers a global variable accessible via special <code>$</code> syntax. <code>vueky.directive()</code> Registers a custom global directive for use in templates. <code>vueky.component()</code> Registers a custom global component for use in templates."},{"location":"#features-petite-vue","title":"Features (<code>petite-vue</code>)","text":"Name Description <code>v-scope</code> Marks the regions on the page that should be controlled . <code>v-effect</code> Execute reactive inline statements. <code>@vue:mounted</code> Component mounted event. <code>@vue:unmounted</code> Component unmounted event."},{"location":"#vue-compatible","title":"Vue Compatible","text":"Name Description <code>v-bind</code> or <code>:</code> For class/style reactive handling. <code>v-on</code> or <code>@</code> Event Handling. <code>v-model</code> Input value binding. <code>v-if</code> / <code>v-else</code> / <code>v-else-if</code> Conditional rendering blocks. <code>v-for</code> Render a list of items. <code>v-show</code> Toggle the display of an element. <code>v-html</code> Render HTML content. <code>v-text</code> Update text content. <code>v-pre</code> Skip compilation for this element and all its children. <code>v-once</code> Render the element and component once only. <code>v-cloak</code> Prevents the display until compiled. <code>reactive()</code> Creates a reactive data object. <code>nextTick()</code> Executes a callback after the next DOM update cycle. Template refs References to DOM elements or child components."},{"location":"api/","title":"(API) Application Programming Interface","text":"<p>The <code>vueky.API</code> function simplifies making HTTP requests to a specified base URL with customizable options. This documentation provides an overview of how to set up the API client and make GET, POST, and file upload requests.</p>"},{"location":"api/#setup","title":"Setup","text":""},{"location":"api/#import-and-initialize","title":"Import and Initialize","text":"<pre><code>const baseURL = \"https://example.com\";\nconst options = {\n  headers: {\n    Authorization: \"Bearer YOUR_ACCESS_TOKEN\",\n  },\n};\n\nconst api = vueky.API(baseURL, options);\n</code></pre> <ul> <li><code>baseURL</code>: The base URL for the API.</li> <li><code>options</code>: An object containing configuration options, such as headers.</li> </ul>"},{"location":"api/#making-requests","title":"Making Requests","text":""},{"location":"api/#get-request","title":"GET Request","text":"<pre><code>api\n  .get(\"path\", { param1: \"value1\", param2: \"value2\" })\n  .then((data) =&gt; console.log(\"GET response:\", data))\n  .catch((error) =&gt; console.error(\"GET error:\", error));\n</code></pre> <ul> <li><code>path</code>: The endpoint path relative to the base URL.</li> <li><code>params</code>: An object containing query parameters.</li> </ul>"},{"location":"api/#post-request","title":"POST Request","text":"<pre><code>api\n  .post(\"path\", { key1: \"value1\", key2: \"value2\" })\n  .then((data) =&gt; console.log(\"POST response:\", data))\n  .catch((error) =&gt; console.error(\"POST error:\", error));\n</code></pre> <ul> <li><code>path</code>: The endpoint path relative to the base URL.</li> <li><code>body</code>: An object containing the request payload.</li> </ul>"},{"location":"api/#file-upload","title":"File Upload","text":""},{"location":"api/#single-file-upload","title":"Single File Upload","text":"<pre><code>const fileInput = document.getElementById('fileInput') as HTMLInputElement;\n\napi\n  .upload(\"upload\", fileInput.files[0])\n  .then((data) =&gt; console.log(\"File Upload response:\", data))\n  .catch((error) =&gt; console.error(\"File Upload error:\", error));\n</code></pre> <ul> <li><code>path</code>: The endpoint path relative to the base URL.</li> <li><code>file</code>: A single file to be uploaded.</li> </ul>"},{"location":"api/#multiple-files-upload","title":"Multiple Files Upload","text":"<pre><code>const multipleFiles = [fileInput.files[0], fileInput.files[1]];\n\napi\n  .upload(\"upload\", multipleFiles)\n  .then((data) =&gt; console.log(\"Files Upload response:\", data))\n  .catch((error) =&gt; console.error(\"Files Upload error:\", error));\n</code></pre> <ul> <li><code>path</code>: The endpoint path relative to the base URL.</li> <li><code>files</code>: An array of files to be uploaded.</li> </ul>"},{"location":"api/#error-handling","title":"Error Handling","text":"<p>Each request method returns a promise that can be handled using <code>.then()</code> for successful responses and <code>.catch()</code> for handling errors.</p>"},{"location":"api/#example","title":"Example","text":"<pre><code>api\n  .get(\"example\", { sample: \"data\" })\n  .then((response) =&gt; {\n    console.log(\"Response received:\", response);\n  })\n  .catch((error) =&gt; {\n    console.error(\"Error occurred:\", error);\n  });\n</code></pre> <p>This setup provides a consistent and straightforward way to interact with your API, handling various types of requests with ease.</p>"},{"location":"configurations/","title":"Configurations <code>init</code>","text":"<p>Initializes Vueky with the provided configuration settings.</p>"},{"location":"configurations/#fields","title":"Fields","text":"<ul> <li><code>mobile</code>: Defines responsive breakpoints for different screen sizes.</li> <li><code>router</code>: Router settings.</li> <li><code>globals</code>: Defines global variables.</li> <li><code>i18n</code>: Sets up internationalization with localized strings.</li> <li><code>store</code>: Initializes a global reactive store for state management.</li> <li><code>magic</code>: Registers global magic properties accessible throughout the application.</li> <li><code>directives</code>: Registers custom directives to be used in templates.</li> <li><code>components</code>: Registers custom components with associated templates.</li> <li><code>methods</code>: Defines custom methods for various functionalities.</li> </ul>"},{"location":"configurations/#basics","title":"Basics","text":"<p>All fields are optional.</p> <pre><code>vueky.init({\n  mobile: [\"xs\", \"sm\", \"md\"], // Define responsive breakpoints\n  router: {\n    // Router settings\n  },\n  globals: {\n    // Global variables\n  },\n  i18n: {\n    // Internationalization settings\n  },\n  store: {\n    // Global reactive store\n  },\n  magic: {\n    // Global magic properties\n  },\n  directives: {\n    // Custom directives\n  },\n  components: {\n    // Custom components\n  },\n  methods: {\n    // Custom methods\n  },\n});\n</code></pre>"},{"location":"configurations/#setup-example","title":"Setup Example","text":"<pre><code>vueky.init({\n  // Default: [\"xs\", \"sm\", \"md\"]\n  mobile: [\"xs\", \"sm\", \"md\"], // Options: [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"]\n  router: {\n    history: true,\n    baseURL: \"apps/\",\n  },\n  globals: {\n    title: \"My Project\",\n  },\n  i18n: {\n    // Internationalization settings\n    fr: {\n      greetings: {\n        hello: \"Bonjour!\",\n      },\n    },\n  },\n  store: {\n    // Global reactive store\n    count: 0,\n  },\n  magic: {\n    // Global magic properties\n    title() {\n      return \"My Project\";\n    },\n  },\n  directives: {\n    // Custom directives\n    \"my-dir\": (ctx) =&gt; console.log(ctx),\n  },\n  components: {\n    // Custom components\n    form: (props) =&gt; ({\n      $template: \"#template-form\",\n    }),\n  },\n  methods: {\n    // Custom methods\n    doSomething({ $app }) {\n      console.log($app.magic(\"i18n\")(\"greetings.hello\"));\n    },\n  },\n});\n</code></pre>"},{"location":"directives/","title":"Custom Directives","text":"<p>Directives allow developers to extend the HTML with new behaviors. They enable the execution of specific logic when applied to elements.</p>"},{"location":"directives/#installing-a-directive","title":"Installing a Directive","text":"<pre><code>vueky.directive(\"my-dir\", (ctx) =&gt; console.log(ctx));\n</code></pre>"},{"location":"directives/#using-a-directive","title":"Using a Directive","text":"<pre><code>&lt;div v-my-dir v-scope&gt;&lt;/div&gt;\n</code></pre>"},{"location":"directives/#creating-a-directive","title":"Creating a Directive","text":"<pre><code>const myDirective = ({ el, exp, arg, modifiers, get, effect }) =&gt; {\n  // Log directive information\n  console.log({\n    element: el,\n    expression: exp,\n    argument: arg,\n    modifiers: modifiers,\n  });\n\n  // Evaluate the expression and get its value\n  if (exp) {\n    const value = get();\n    console.log(value);\n\n    // Evaluate an arbitrary expression in the current scope\n    const evaluatedExpression = get(`${exp} + 10`);\n    console.log(evaluatedExpression);\n\n    // Run reactive effect\n    effect(() =&gt; {\n      console.log(get());\n    });\n  }\n\n  return () =&gt; {\n    // Cleanup if the element is unmounted\n  };\n};\n</code></pre>"},{"location":"directives/#imask-directive-example","title":"IMask Directive Example","text":"<pre><code>import IMask from \"imask\";\n\nconst Mask = ({ el: element, get, exp, arg }: any) =&gt; {\n  const value = get();\n\n  const createMask = (config) =&gt; {\n    const mask = IMask(element, config);\n    element.__mask__ = mask;\n    return () =&gt; mask.destroy();\n  };\n\n  const updateValue = (assign, value) =&gt; {\n    const mask = element.__mask__;\n    mask.value = value.toString();\n    assign(mask.value);\n  };\n\n  const addInputListener = (handler) =&gt; {\n    element.addEventListener(\"input\", handler);\n    return () =&gt; element.removeEventListener(\"input\", handler);\n  };\n\n  const handleInput =\n    (assign, unmasked = false) =&gt;\n    (e) =&gt; {\n      const mask = element.__mask__;\n      const value = unmasked ? mask.unmaskedValue : mask.value;\n      assign(value);\n    };\n\n  if (!arg) {\n    const config = typeof value === \"string\" ? { mask: value } : value;\n    return createMask(config);\n  }\n\n  const assign = get(`(val) =&gt; { ${exp} = val }`);\n\n  if (arg === \"value\") {\n    updateValue(assign, value);\n    return addInputListener(handleInput(assign));\n  }\n\n  if (arg === \"unmasked\") {\n    if (element.__mask__) {\n      assign(element.__mask__.unmaskedValue);\n    }\n    return addInputListener(handleInput(assign, true));\n  }\n};\n</code></pre>"},{"location":"directives/#mask-usage","title":"Mask Usage","text":"<pre><code>&lt;script&gt;\n  vueky.directive(\"mask\", Mask);\n&lt;/script&gt;\n\n&lt;form v-scope=\"{ value: '22', unmasked:'' }\"&gt;\n  &lt;!-- Text Input --&gt;\n  &lt;input\n    type=\"text\"\n    v-mask=\"('0-0')\"\n    v-mask:value=\"value\"\n    v-mask:unmasked=\"unmasked\"\n  /&gt;\n  ${ value } | ${ unmasked }\n&lt;/form&gt;\n</code></pre>"},{"location":"plugins/","title":"Plugins","text":"<p>Plugins are extensions that add extra functionality to the core library, allowing developers to integrate additional features seamlessly. They enhance the capabilities of the framework by providing reusable and modular components, directives, and utilities.</p>"},{"location":"plugins/#create-plugin","title":"Create Plugin","text":"<pre><code>const Plugin = {\n  install: (App, options) =&gt; {\n    const opts = options || {};\n\n    // Store\n    App.store(\"example\", { value: \"reactive-value\" });\n\n    // Magic\n    App.magic(\"title\", () =&gt; \"My-Title\");\n\n    // Directive\n    App.directive(\"my-dir\", (ctx) =&gt; console.log(ctx));\n\n    // Component\n    App.component(\"button\", (props) =&gt; {\n      return {\n        $template: \"&lt;button&gt;${ text }&lt;/button&gt;\",\n        text: props.text,\n      };\n    });\n  },\n};\n</code></pre>"},{"location":"plugins/#install-plugin-use","title":"Install Plugin (<code>use</code>)","text":"<pre><code>// Install\nvueky.use(Plugin);\n\n// Install with Options\nvueky.use(Plugin, { arg: \"one\" });\n\n// Run\nvueky.init();\nvueky.app().mount();\n</code></pre>"},{"location":"store/","title":"State","text":"<p>Manage reactive data with ease.</p>"},{"location":"store/#local-state","title":"Local State","text":"<p>Define and manipulate local state within a component.</p> <pre><code>&lt;div v-scope=\"{ count: 0 }\"&gt;\n  ${ count }\n  &lt;button @click=\"count++\"&gt;Increment&lt;/button&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"store/#global-state","title":"Global State","text":"<p>Register a global store using vueky.store and access it with the magic word <code>$store</code>.</p> <pre><code>// Register a global store\nvueky.store(\"darkMode\", {\n  on: false,\n  toggle() {\n    this.on = !this.on;\n  },\n});\n\n// Toggle the dark mode\nvueky.store(\"darkMode\").toggle();\n\n// Get the current value\nconsole.log(vueky.store(\"darkMode\").on);\n</code></pre>"},{"location":"store/#inside-components","title":"Inside Components","text":"<p>Use global state within components to maintain consistency across your application.</p> <pre><code>&lt;script&gt;\n  // Register a global store for demonstration purposes\n  vueky.store(\"demo\", {\n    count: 0,\n    inc() {\n      this.count++;\n    },\n  });\n&lt;/script&gt;\n\n&lt;div v-scope&gt;\n  ${ $store.demo.count }\n  &lt;button @click=\"$store.demo.inc\"&gt;Increment&lt;/button&gt;\n&lt;/div&gt;\n</code></pre> <p>This approach ensures that your state management is both intuitive and powerful, whether you're working with local or global data.</p>"},{"location":"built-in/directives/","title":"Directives","text":"<ul> <li><code>v-css</code>: Provides a way to apply custom CSS rules directly within templates.</li> <li><code>v-style</code>: Applies dynamic styles to elements based on reactive data.</li> <li><code>v-hover</code>: Triggers actions when an element is hovered over.</li> <li><code>v-click-outside</code>: Triggers actions when an other element is clicked.</li> <li><code>v-ripple</code>: Adds a ripple effect to elements when clicked.</li> <li><code>v-scroll</code>: Handles scroll events, allowing for actions based on scroll position.</li> <li><code>v-swipe</code>: Detects swipe gestures and triggers actions based on swipe direction.</li> <li><code>v-popover</code>: Creates popover elements that display additional content when triggered.</li> </ul> <p>Here are the improved documentation and examples, with each directive and directive group separated for better clarity.</p>"},{"location":"built-in/directives/#directives","title":"Directives","text":""},{"location":"built-in/directives/#v-ripple","title":"<code>v-ripple</code>","text":"<p>Adds a ripple effect to elements when clicked.</p>"},{"location":"built-in/directives/#example","title":"Example:","text":"<pre><code>&lt;div&gt;\n  &lt;button v-ripple&gt;Click Me for Ripple Effect&lt;/button&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"built-in/directives/#v-css","title":"<code>v-css</code>","text":"<p>Provides a way to apply custom CSS rules directly within templates.</p>"},{"location":"built-in/directives/#example_1","title":"Example:","text":"<pre><code>&lt;!-- Animate (CSS) --&gt;\n&lt;link\n  rel=\"stylesheet\"\n  href=\"https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css\"\n/&gt;\n\n&lt;!-- Example --&gt;\n&lt;div v-scope=\"{open : false}\"&gt;\n  &lt;button @click=\"open = !open\"&gt;Click Me&lt;/button&gt;\n  &lt;div\n    class=\"animate__animated animate__faster\"\n    v-css.hide:is=\"open\"\n    v-css:on=\"('animate__fadeIn')\"\n    v-css:off=\"('animate__fadeOut')\"\n  &gt;\n    The Content\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"built-in/directives/#v-style","title":"<code>v-style</code>","text":"<p>Applies dynamic styles to elements based on reactive data.</p>"},{"location":"built-in/directives/#example_2","title":"Example:","text":"<pre><code>&lt;div v-scope=\"{ height: '60px' }\"&gt;\n  &lt;button v-style:height=\"height\" @click=\"height = '80px'\"&gt;\n    Button with Dynamic Height\n  &lt;/button&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"built-in/directives/#v-hover","title":"<code>v-hover</code>","text":"<p>Triggers actions when an element is hovered over.</p>"},{"location":"built-in/directives/#example_3","title":"Example:","text":"<pre><code>&lt;div v-scope=\"{ hover: false }\"&gt;\n  &lt;div v-hover=\"({ value }) =&gt; (hover = value)\"&gt;Hover over me!&lt;/div&gt;\n  &lt;div v-if=\"hover\"&gt;You are hovering!&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"built-in/directives/#v-click-outside","title":"<code>v-click-outside</code>","text":"<p>Triggers actions when an other element is clicked.</p>"},{"location":"built-in/directives/#example_4","title":"Example:","text":"<pre><code>&lt;div v-scope=\"{ open : false }\" v-click-outside=\"() =&gt; { open = false }\"&gt;\n  &lt;div @click=\"open = !open\"&gt;Click Me&lt;/div&gt;\n  &lt;div v-if=\"open\"&gt;Popover Content&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"built-in/directives/#v-scroll","title":"<code>v-scroll</code>","text":"<p>Handles scroll events, allowing for actions based on scroll position.</p>"},{"location":"built-in/directives/#example_5","title":"Example:","text":"<pre><code>&lt;div v-scope=\"{ position: 0 }\"&gt;\n  &lt;div\n    v-scroll=\"({ value }) =&gt; position = value.y\"\n    style=\"height: 100px; overflow-y: scroll\"\n  &gt;\n    &lt;div style=\"height: 300px\"&gt;Scroll me!&lt;/div&gt;\n  &lt;/div&gt;\n  &lt;div&gt;Scroll Position: ${ position }&lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"built-in/directives/#v-swipe","title":"<code>v-swipe</code>","text":"<p>Detects swipe gestures and triggers actions based on swipe direction.</p>"},{"location":"built-in/directives/#example_6","title":"Example:","text":"<pre><code>&lt;div v-scope&gt;\n  &lt;div\n    v-swipe=\"({ value }) =&gt; console.log(value)\"\n    style=\"width: 100px; height: 100px; background-color: lightblue;\"\n  &gt;\n    Swipe Me!\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"built-in/directives/#v-popover","title":"<code>v-popover</code>","text":"<p>Creates popover elements that display additional content when triggered.</p> <ul> <li><code>x</code>: Horizontal positioning. Options are <code>auto</code>, <code>center</code>, <code>left</code>, <code>right</code>.</li> <li><code>y</code>: Vertical positioning. Options are <code>auto</code>, <code>center</code>, <code>top</code>, <code>bottom</code>.</li> <li><code>:space</code>: Adds space between the activator and the content.</li> </ul>"},{"location":"built-in/directives/#example_7","title":"Example:","text":"<pre><code>&lt;div v-scope=\"{open : false}\" v-hover=\"({ value }) =&gt; open = value\"&gt;\n  &lt;button x-data x-ripple @click.prevent=\"open = !open\"&gt;PopOver + CSS&lt;/button&gt;\n\n  &lt;div\n    v-popover=\"{ x:'auto', y:'auto' }\"\n    v-popover:space=\"{ x:'0px', y:'10px' }\"\n    class=\"animate__animated animate__faster\"\n    v-css.hide:is=\"open\"\n    v-css:on=\"('animate__fadeIn')\"\n    v-css:off=\"('animate__fadeOut')\"\n  &gt;\n    &lt;div\n      class=\"bd-a sb-12\"\n      v-style:width=\"('200px')\"\n      v-style:height=\"('200px')\"\n    &gt;\n      The Content\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"built-in/magic/","title":"Magic","text":"<ul> <li><code>$globals</code>: Global Variables</li> <li><code>$router</code>: Router Admin</li> <li><code>$use</code>: Registered Components</li> <li><code>$i18n</code>: Translations</li> <li><code>$lorem</code>: Utility for Testing Areas</li> </ul>"},{"location":"built-in/magic/#globals-variables","title":"<code>$globals</code>: Variables","text":"<p>Example:</p> <pre><code>&lt;p v-scope&gt;${ $globals.title }&lt;/p&gt;\n</code></pre>"},{"location":"built-in/magic/#router-admin","title":"<code>$router</code>: Admin","text":"<ul> <li><code>router.current</code>: Retrieves the current route and search parameters.</li> <li><code>router.is(\"view-name\")</code>: Checks if the given view name matches the current route.</li> <li><code>router.go(\"name\", { params })</code>: Navigates to the specified route. You can optionally add search parameters to the route.</li> </ul> <p>Example: HTML</p> <pre><code>&lt;p v-scope&gt;${ $router.current }&lt;/p&gt;\n&lt;!-- OR --&gt;\n&lt;p v-scope&gt;${ vueky.router.current }&lt;/p&gt;\n</code></pre> <p>Example: JS</p> <pre><code>vueky.router.go(\"about-us\", { key: \"one\" });\n</code></pre>"},{"location":"built-in/magic/#use-registered-components","title":"<code>$use</code>: Registered Components","text":"<p>Allows the use of registered components within your templates.</p> <p>Description: Utilizes the registered components, enabling modular and reusable elements across your application.</p> <p>Example:</p> <pre><code>&lt;script&gt;\n  vueky.component(\"button\", (props) =&gt; {\n    return {\n      $template: \"&lt;button&gt;${ text }&lt;/button&gt;\",\n      text: props.text,\n    };\n  });\n&lt;/script&gt;\n\n&lt;div v-scope=\"$use.button({ text: 'click me' })\"&gt;&lt;/div&gt;\n</code></pre>"},{"location":"built-in/magic/#i18n-translations","title":"<code>$i18n</code>: Translations","text":"<p>Provides a simple way to handle translations and localization in your application.</p> <p>Description: Enables multilingual support by offering translation strings based on the current locale.</p> <p>Example:</p> <pre><code>// Register translations\nvueky.init({\n  i18n: {\n    en: {\n      greeting: \"Hello\",\n    },\n    fr: {\n      greeting: \"Bonjour\",\n    },\n  },\n});\n\n// Switch language\nvueky.magic(\"$i18n\").locale = \"fr\";\nconsole.log(vueky.magic(\"$i18n\")(\"greeting\"));\n</code></pre> <pre><code>&lt;div v-scope&gt;${ $i18n('greeting') }&lt;/div&gt;\n</code></pre>"},{"location":"built-in/magic/#lorem-utility-for-testing-areas","title":"<code>$lorem</code>: Utility for Testing Areas","text":"<p>Generates placeholder text for testing purposes.</p> <p>Description: Provides a quick way to generate Lorem Ipsum text for layout and design testing.</p> <ul> <li><code>word</code> or <code>w</code></li> <li><code>sentence</code> or <code>s</code></li> </ul> <p>Example:</p> <pre><code>&lt;div v-scope&gt;\n  &lt;p&gt;${ $lorem.word(5) }&lt;/p&gt;\n  &lt;!-- Generates 5 words --&gt;\n  &lt;p&gt;${ $lorem.sentence(5) }&lt;/p&gt;\n  &lt;!-- Generates 5 sentence --&gt;\n  &lt;p&gt;${ $lorem.s(50) }&lt;/p&gt;\n  &lt;!-- Generates 50 sentence --&gt;\n&lt;/div&gt;\n</code></pre>"}]}